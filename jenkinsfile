pipeline {
  agent any 
  environment {
		DOCKERHUB_CREDENTIALS=credentials('ram-dockerhub-login')
	}
    stages {
      stage('SonarQube analysis') {
        environment{
               scannerHome = tool 'sonar-scanner'
          }
        steps { 
          withSonarQubeEnv('sonarqube') {
            sh "${scannerHome}/bin/sonar-scanner"     
           }
        }
     } 
      stage("Quality Gate") {
            steps {
              timeout(time: 10, unit: 'MINUTES') {
                waitForQualityGate abortPipeline: true
              }
            }
          }
      stage("Create Docker image") {
      steps {
      withCredentials([string(credentialsId: 'ram-dockerhub-login', variable: 'TOKEN')]) {
      
              sh '''
                sudo docker build -t oshokumar/appointme-admin-api:latest .
                sudo docker login -u oshokumar -p ${TOKEN}
                sudo docker push oshokumar/appointme-admin-api:latest
                
                '''
		}
            }

   }
   
   stage("Trivy Docker scan") 
   {
            steps {
              sh "sudo trivy image oshokumar/appointme-admin-api:latest"
 
                  }
    }

 }
}

