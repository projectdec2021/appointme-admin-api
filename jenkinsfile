pipeline {
  agent any 
  environment {
		DOCKERHUB_CREDENTIALS=credentials('ram-dockerhub-login')
		TRIVY_CRITICAL_THRES=200
		DOCK_IMG_NAME="35.232.16.59:8082/appointme-admin-api:${BUILD_NUMBER}"
	}
    stages {
      stage('SonarQube analysis') {
        environment{
               scannerHome = tool 'sonar-scanner'
          }
        steps { 
          withSonarQubeEnv('sonarqube') {
            sh "${scannerHome}/bin/sonar-scanner"     
           }
        }
     } 
      stage("Quality Gate") {
            steps {
              timeout(time: 10, unit: 'MINUTES') {
                waitForQualityGate abortPipeline: true
              }
            }
          }
      stage("Create Docker image") {
      steps {
      withCredentials([usernamePassword(credentialsId: 'nexus-secret', passwordVariable: 'pass', usernameVariable: 'username')]) {
      
              sh '''
                sudo docker build -t ${DOCK_IMG_NAME} .
                sudo docker login -u ${username} -p ${pass} 35.232.16.59:8082
                sudo docker push ${DOCK_IMG_NAME}
                
                '''
		}
            }

   }
   
   stage("Trivy Docker scan") 
   {
            steps {
              sh '''
	      TH=`sudo trivy image ${DOCK_IMG_NAME} |sed -n '8,8p'|cut -d ":" -f7|cut -d ")" -f1`
	      if [ $TH -gt ${TRIVY_CRITICAL_THRES} ]
	      then   
	         echo "FAILED:Crossed the Critical Threshold Limit of "${TRIVY_CRITICAL_THRES} !!!!!
		 exit 1
	      fi
	      
	      '''
 
                  }
    }
    
    stage("Deploy the application")
    {
       steps {
       
              echo BRANCH_NAME=${BRANCH_NAME}
       
      
       
       
       }
    }
    

 }
}

